:: Generates java constant classes from PIC C sources & preprocessor outputs
@echo off
setlocal
set "picJava=%~dp0base\src\main\java\org\chuma\homecontroller\base\node\Pic.java"
set "messageTypeJava=%~dp0base\src\main\java\org\chuma\homecontroller\base\node\MessageType.java"

set "picSymbols=%~dp0..\pic\node\dist\PIC18F26K80\production\node.production.sym"
set "picH=%~dp0..\pic\pic18F26k80.h"
set "constantsH=..\pic\node\Constants.h"
set "excludeList=DDRA \|DDRB \|DDRC \|RCSTA1 \|TXSTA1 \|TXREG1 \|RCREG1 \|SPBRG \|TMR3 \|BAUDCON \|CCPR1 \|ADRES \|MEMCON \|TMR1 \|HLVDCON \|LVDCON \|TMR0 \|FSR2 \|FSR1 \|FSR0 \|PROD \|TBLPTR \|PCLAT \|TOS \|PC \|ECCP1CON\|ECCP2CON\|portConfig\|CM2CON\|CM1CON\|CMSTATUS\|INTCON\|PWM1CON"
echo // Generated by %~nx0>"%picJava%"
echo.>>"%picJava%"
echo package org.chuma.homecontroller.base.node;>>"%picJava%"
echo.>>"%picJava%"
echo public class Pic {>>"%picJava%"

if not exist "%picSymbols%" pause
if not exist "%picH%" pause
if not exist "%constantsH%" pause

for /f "tokens=1,2" %%f in ('type %picSymbols% ^| grep "COMRAM\|BANK" ^| grep "^_[^_\]" ^| sed "s/^_//" ^| sort') do echo     public static final int %%f = 0x%%g;>>"%picJava%"
echo.>>"%picJava%"
for /f "tokens=1,2" %%f in ('type %picH% ^| grep "#define REG_" ^| sed "s/#define REG_//"') do echo     public static final int %%f = %%g;>>"%picJava%"
echo.>>"%picJava%"
for /f "tokens=1,2" %%f in ('type %constantsH% ^| grep -A 100 registryMapping ^| grep "=" ^| sed "s/ *\([a-zA-Z0-9_]\+\) *= *\([a-zA-Z0-9_+]\+\)/\1 \2/"') do echo     public static final int %%f = %%g;| sed "s/\+/ + /">>"%picJava%"
echo.>>"%picJava%"

echo     public static String toString(int address) {>>"%picJava%"
echo         switch (address) {>>"%picJava%"
for /f "tokens=1" %%f in ('type %picSymbols% ^| grep "COMRAM\|BANK" ^| grep "^_[^_\]" ^| grep -v "%excludeList%" ^| sed "s/^_//" ^| sort') do @call :generateCase %%f "%%f">>"%picJava%"
echo.>>"%picJava%"
for /f "tokens=1,2" %%f in ('type %picH% ^| grep "#define REG_" ^| grep -v "%excludeList%" ^| sed "s/#define REG_//"') do @call :generateCase %%f "%%f">>"%picJava%"
echo.>>"%picJava%"
for /f "tokens=1,2" %%f in ('type %constantsH% ^| grep -A 100 registryMapping ^| grep "=" ^| sed "s/ *\([a-zA-Z0-9_]\+\) *= *\([a-zA-Z0-9_+]\+\)/\1 \2/"') do @call :generateCase %%f "%%f">>"%picJava%"
echo         }>>"%picJava%"
echo         return "0x" + Integer.toHexString(address);>>"%picJava%"
echo     }>>"%picJava%"
echo }>>"%picJava%"


echo // Generated by %~nx0>"%messageTypeJava%"
echo.>>"%messageTypeJava%"
echo package org.chuma.homecontroller.base.node;>>"%messageTypeJava%"
echo.>>"%messageTypeJava%"
echo public class MessageType {>>"%messageTypeJava%"
for /f "delims=@" %%f in ('type %~dp0%constantsH% ^| grep -A 200 "^//Begin Commands" ^| grep -B 200 "^//End Commands" ^|grep -v "^//" ^| sed "s/^ *\([^,]\+\),\(.*\)/    public static final byte \1;\2/"') do @echo %%f>>"%messageTypeJava%"

echo.>>"%messageTypeJava%"
echo     public static String toString(int type) {>>"%messageTypeJava%"
echo         switch (type) {>>"%messageTypeJava%"
for /f "delims=@" %%f in ('type %~dp0%constantsH% ^| grep -A 200 "^//Begin Commands" ^| grep -B 200 "^//End Commands" ^|grep -v "^//" ^| sed "s/^ *\([^ =]\+\).*/            case \1:\n                return ""\1\"";/"') do @echo %%f>>"%messageTypeJava%"
echo         }>>"%messageTypeJava%"
echo         return "Unknown(" + type + ")";>>"%messageTypeJava%"
echo     }>>"%messageTypeJava%"
echo }>>"%messageTypeJava%"

goto :eof
:generateCase
    @echo             case %1:
    @echo                 return %2;
